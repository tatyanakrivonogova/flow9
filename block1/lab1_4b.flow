import runtime;
import ds/tree;

findPairs(array: [int], m: int) -> [Pair<int, int>] {
    ready_tree = foldi(array, makeTree(), \i, current_tree, a_i -> {
        switch(lookupTree(current_tree, a_i)) {
            Some(current_value): setTree(current_tree, a_i, concat(current_value, [i]));
            None(): setTree(current_tree, a_i, [i]);
        }
    });

    foldi(array, [], \i, pairs, a_i -> 
        switch(lookupTree(ready_tree, m - a_i)) {
            Some(value): concat(pairs, map(value, \j -> Pair(i, j)));
            None(): pairs;
        })

}

main() {
    array = [2, 9, 1, 6, 5, 0, 3, 7, 8, 4];
    println(findPairs(array, 8));
    quit(0);
}